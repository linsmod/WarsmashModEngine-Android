package com.shc.androidopenal;

public interface ALConstants
{
    int AL_INVALID                   = ALJNI.AL_INVALID_get();
    int AL_NONE                      = ALJNI.AL_NONE_get();
    int AL_FALSE                     = ALJNI.AL_FALSE_get();
    int AL_TRUE                      = ALJNI.AL_TRUE_get();
    int AL_SOURCE_RELATIVE           = ALJNI.AL_SOURCE_RELATIVE_get();
    int AL_CONE_INNER_ANGLE          = ALJNI.AL_CONE_INNER_ANGLE_get();
    int AL_CONE_OUTER_ANGLE          = ALJNI.AL_CONE_OUTER_ANGLE_get();
    int AL_PITCH                     = ALJNI.AL_PITCH_get();
    int AL_POSITION                  = ALJNI.AL_POSITION_get();
    int AL_DIRECTION                 = ALJNI.AL_DIRECTION_get();
    int AL_VELOCITY                  = ALJNI.AL_VELOCITY_get();
    int AL_LOOPING                   = ALJNI.AL_LOOPING_get();
    int AL_BUFFER                    = ALJNI.AL_BUFFER_get();
    int AL_GAIN                      = ALJNI.AL_GAIN_get();
    int AL_MIN_GAIN                  = ALJNI.AL_MIN_GAIN_get();
    int AL_MAX_GAIN                  = ALJNI.AL_MAX_GAIN_get();
    int AL_ORIENTATION               = ALJNI.AL_ORIENTATION_get();
    int AL_SOURCE_STATE              = ALJNI.AL_SOURCE_STATE_get();
    int AL_INITIAL                   = ALJNI.AL_INITIAL_get();
    int AL_PLAYING                   = ALJNI.AL_PLAYING_get();
    int AL_PAUSED                    = ALJNI.AL_PAUSED_get();
    int AL_STOPPED                   = ALJNI.AL_STOPPED_get();
    int AL_BUFFERS_QUEUED            = ALJNI.AL_BUFFERS_QUEUED_get();
    int AL_BUFFERS_PROCESSED         = ALJNI.AL_BUFFERS_PROCESSED_get();
    int AL_SEC_OFFSET                = ALJNI.AL_SEC_OFFSET_get();
    int AL_SAMPLE_OFFSET             = ALJNI.AL_SAMPLE_OFFSET_get();
    int AL_BYTE_OFFSET               = ALJNI.AL_BYTE_OFFSET_get();
    int AL_SOURCE_TYPE               = ALJNI.AL_SOURCE_TYPE_get();
    int AL_STATIC                    = ALJNI.AL_STATIC_get();
    int AL_STREAMING                 = ALJNI.AL_STREAMING_get();
    int AL_UNDETERMINED              = ALJNI.AL_UNDETERMINED_get();
    int AL_FORMAT_MONO8              = ALJNI.AL_FORMAT_MONO8_get();
    int AL_FORMAT_MONO16             = ALJNI.AL_FORMAT_MONO16_get();
    int AL_FORMAT_STEREO8            = ALJNI.AL_FORMAT_STEREO8_get();
    int AL_FORMAT_STEREO16           = ALJNI.AL_FORMAT_STEREO16_get();
    int AL_REFERENCE_DISTANCE        = ALJNI.AL_REFERENCE_DISTANCE_get();
    int AL_ROLLOFF_FACTOR            = ALJNI.AL_ROLLOFF_FACTOR_get();
    int AL_CONE_OUTER_GAIN           = ALJNI.AL_CONE_OUTER_GAIN_get();
    int AL_MAX_DISTANCE              = ALJNI.AL_MAX_DISTANCE_get();
    int AL_FREQUENCY                 = ALJNI.AL_FREQUENCY_get();
    int AL_BITS                      = ALJNI.AL_BITS_get();
    int AL_CHANNELS                  = ALJNI.AL_CHANNELS_get();
    int AL_SIZE                      = ALJNI.AL_SIZE_get();
    int AL_UNUSED                    = ALJNI.AL_UNUSED_get();
    int AL_PENDING                   = ALJNI.AL_PENDING_get();
    int AL_PROCESSED                 = ALJNI.AL_PROCESSED_get();
    int AL_NO_ERROR                  = ALJNI.AL_NO_ERROR_get();
    int AL_INVALID_NAME              = ALJNI.AL_INVALID_NAME_get();
    int AL_INVALID_ENUM              = ALJNI.AL_INVALID_ENUM_get();
    int AL_INVALID_VALUE             = ALJNI.AL_INVALID_VALUE_get();
    int AL_INVALID_OPERATION         = ALJNI.AL_INVALID_OPERATION_get();
    int AL_OUT_OF_MEMORY             = ALJNI.AL_OUT_OF_MEMORY_get();
    int AL_VENDOR                    = ALJNI.AL_VENDOR_get();
    int AL_VERSION                   = ALJNI.AL_VERSION_get();
    int AL_RENDERER                  = ALJNI.AL_RENDERER_get();
    int AL_EXTENSIONS                = ALJNI.AL_EXTENSIONS_get();
    int AL_DOPPLER_FACTOR            = ALJNI.AL_DOPPLER_FACTOR_get();
    int AL_DOPPLER_VELOCITY          = ALJNI.AL_DOPPLER_VELOCITY_get();
    int AL_SPEED_OF_SOUND            = ALJNI.AL_SPEED_OF_SOUND_get();
    int AL_DISTANCE_MODEL            = ALJNI.AL_DISTANCE_MODEL_get();
    int AL_INVERSE_DISTANCE          = ALJNI.AL_INVERSE_DISTANCE_get();
    int AL_INVERSE_DISTANCE_CLAMPED  = ALJNI.AL_INVERSE_DISTANCE_CLAMPED_get();
    int AL_LINEAR_DISTANCE           = ALJNI.AL_LINEAR_DISTANCE_get();
    int AL_LINEAR_DISTANCE_CLAMPED   = ALJNI.AL_LINEAR_DISTANCE_CLAMPED_get();
    int AL_EXPONENT_DISTANCE         = ALJNI.AL_EXPONENT_DISTANCE_get();
    int AL_EXPONENT_DISTANCE_CLAMPED = ALJNI.AL_EXPONENT_DISTANCE_CLAMPED_get();
}
